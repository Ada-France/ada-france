## The type of library we want to build. Possible values:
##   relocatable
##   static
LIBRARY_TYPE=static

# You may edit this makefile as long as you keep these original 
# target names defined.
MODE=debug
GNATMAKE=@GNATMAKE@
GNATCLEAN=gnatclean
GPRINSTALL=@GPRINSTALL@
INSTALL=@INSTALL@
DYNAMO=dynamo
LN_S=@LN_S@
MKDIR=mkdir
CP=cp
LN=ln -s

HAVE_GPR:=$(shell test -f ${NAME}.gpr && echo 1 || echo 0)
ifeq (${HAVE_GPR},1)
GPRPATH:=${NAME}.gpr
endif

BUILDS_SHARED=@BUILDS_SHARED@

version=@ADAFR_VERSION@

distdir=adafr-@ADAFR_VERSION@

DIST_FILE=adafr-@ADAFR_VERSION@.tar.gz

HAVE_MYSQL=@ADO_DB_MYSQL@
HAVE_SQLITE=@ADO_DB_SQLITE@
HAVE_AWS=@AWA_AWS_STATUS@

ifeq (${OS},Windows_NT)
LIBEXT=dll
LIBVER=dll
else
LIBEXT=so
LIBVER=so.$(version)
endif

srcdir = .
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
top_builddir = .

# share/ada/adainclude
infix_inc=@ADA_INC_BASE@

# share/ada/adainclude
infix_prj=@ADA_PRJ_BASE@

# lib
infix_lib=@ADA_LIB_BASE@

# lib/ada/adalib
infix_ali=@ADA_ALI_BASE@

includedir=${prefix}/${infix_inc}
projectdir=${prefix}/${infix_prj}
bindir=${prefix}/bin
libdir=${prefix}/${infix_lib}
alidir=${prefix}/${infix_ali}
dynamodir=${prefix}/share/dynamo

COVERAGE=no
PROCESSORS=@NR_CPUS@
MAKE_ARGS=-XMODE=${MODE} -XCOVERAGE=${COVERAGE} -XLIBRARY_TYPE=${LIBRARY_TYPE} -XPROCESSORS=$(PROCESSORS)

ifeq (${BUILDS_SHARED},yes)
all:     static shared
install: install_static install_shared install-bin post-install
else
all:     static
install: install_static
endif

# Build executables for all mains defined by the project.
build: local-build post-build build-tests

local-build: pre-build
ifneq (${GPRPATH},)
	$(GNATMAKE) -m -p -P "$(GPRPATH)" $(MAKE_ARGS)
endif

build-tests:
	test ! -f tests.gpr -o ! -d regtests || $(GNATMAKE) -m -p -Ptests $(MAKE_ARGS)

static:
	$(MAKE) LIBRARY_TYPE=static build

shared:
ifneq (${GPRPATH},)
	$(MAKE) LIBRARY_TYPE=relocatable build
endif

# Not intended for manual invocation.
# Invoked if automatic builds are enabled.
# Analyzes only on those sources that have changed.
# Does not build executables.
autobuild:
	$(GNATMAKE) -gnatc -c -k  -P "$(GPRPATH)"

# Clean the root project of all build products.
clean:  pre-clean
	-$(GNATCLEAN) -q -P "$(GPRPATH)" -XLIBRARY_TYPE=static
	-$(GNATCLEAN) -q -P "$(GPRPATH)" -XLIBRARY_TYPE=relocatable

# Clean root project and all imported projects too.
clean_tree:
	$(GNATCLEAN) -P "$(GPRPATH)" -r

# Check *all* sources for errors, even those not changed.
# Does not build executables.
analyze:
	$(GNATMAKE) -f  -gnatc -c -k  -P "$(GPRPATH)"

# Clean, then build executables for all mains defined by the project.
rebuild: clean build

# Rebuild the generated model files
generate:  post-generate
	$(DYNAMO) generate $(DYNAMO_ARGS)

install_static:
	$(MAKE) LIBRARY_TYPE=static install_lib

install_shared:
	$(MAKE) LIBRARY_TYPE=relocatable install_lib

install_lib:  uninstall pre-install
	${MKDIR} -p ${includedir}/${NAME}
	${MKDIR} -p ${projectdir}/
	${MKDIR} -p ${dynamodir}/${NAME}/config
	${MKDIR} -p ${dynamodir}/${NAME}/bundles
	${MKDIR} -p ${dynamodir}/${NAME}/web
	${MKDIR} -p ${dynamodir}/${NAME}/db
	${MKDIR} -p ${dynamodir}/${NAME}/db/mysql
	${MKDIR} -p ${dynamodir}/${NAME}/db/sqlite
	test ! -d src ||  src/*.ad[bs] ${includedir}/${NAME}
	test ! -d src/model || ${CP} src/model/*.ad[bs] ${includedir}/${NAME}
	test ! -f distrib/${GPRPATH} || \
	    sed -e "s,INSTALL,${prefix},g" \
	        -e "s,LIBRARY_TYPE,$(LIBRARY_TYPE),g" < distrib/${GPRPATH} > ${projectdir}/${GPRPATH}
	test ! -d config || ${CP} config/*.xml ${dynamodir}/${NAME}/config/
	${CP} dynamo.xml ${dynamodir}/${NAME}/dynamo.xml
	test ! -f MIT-LICENSE.txt || ${CP} MIT-LICENSE.txt ${dynamodir}/${NAME}/MIT-LICENSE.txt
	test ! -f COPYING3 || ${CP} COPYING3 ${dynamodir}/${NAME}/COPYING3
	test ! -f NOTICE.txt || ${CP} NOTICE.txt ${dynamodir}/${NAME}/NOTICE.txt
	test ! -f LICENSE.txt || ${CP} LICENSE.txt ${dynamodir}/${NAME}/LICENSE.txt
	test ! -d bundles || ${CP} bundles/*.properties ${dynamodir}/${NAME}/bundles/
	test ! -d db || \
	     (tar --exclude=.svn --exclude='*~' -cf - db)| (cd ${dynamodir}/${NAME}/ && tar xf -)
	test ! -d web || \
	     (tar --exclude=.svn --exclude='*~' -cf - web )| (cd ${dynamodir}/${NAME}/ && tar xf -)
ifneq (${GPRPATH},)
ifneq (${GPRINSTALL},)
	$(GPRINSTALL) -p -f --prefix=${prefix} $(MAKE_ARGS) \
		--build-name=$(AWA_LIBRARY_TYPE) $(GPRPATH)
else
	test ! -d lib/${NAME}/${LIBRARY_TYPE} || \
	     (${MKDIR} -p ${alidir}/${NAME}/$(LIBRARY_TYPE) && \
	     ${CP} lib/${NAME}/$(LIBRARY_TYPE)/*.ali ${alidir}/${NAME}/$(LIBRARY_TYPE)/)
ifeq ($(LIBRARY_TYPE),static)
	test ! -f lib/${NAME}/$(LIBRARY_TYPE)/${LIBNAME}.a || \
	     ${CP} lib/${NAME}/$(LIBRARY_TYPE)/${LIBNAME}.a ${libdir}/
else
	test ! -f lib/${NAME}/$(LIBRARY_TYPE)/${LIBNAME}.${LIBVER} || \
	     (${CP} -p lib/${NAME}/$(LIBRARY_TYPE)/${LIBNAME}.$(LIBVER) ${libdir}/ && \
	      cd ${libdir} && \
	      rm -f ${LIBNAME}.$(LIBEXT) && \
	      ${LN} ${LIBNAME}.$(LIBVER) ${LIBNAME}.$(LIBEXT))
endif
endif
endif

uninstall:  pre-uninstall
	rm -rf ${dynamodir}/${NAME}
ifneq (${GPRPATH},)
ifneq (${GPRINSTALL},)
	-$(GPRINSTALL) -q -f --prefix=${prefix} $(MAKE_ARGS) --uninstall $(GPRPATH)
else
	rm -rf ${includedir}/${NAME}
	rm -f ${libdir}/${LIBNAME}.a
	rm -f ${libdir}/${LIBNAME}.$(LIBVER)
	rm -f ${projectdir}/${NAME}.gpr
	rm -rf ${alidir}/${NAME}
endif
endif

install-bin:
ifneq (${EXECS},)
	$(INSTALL) -m 755 $(EXECS) ${bindir}/
endif

pre-clean:
pre-build:
pre-install:
pre-uninstall:
pre-dist-prepare:
pre-dist:
post-build:
post-generate:
post-install:

install-info:
ifeq (${GPRINSTALL},)
	@echo "Installation directories:"
	@echo "  Ada source files:    ${includedir}"
	@echo "  ALI files:           ${alidir}"
	@echo "  Libraries:           ${libdir}"
	@echo "  GNAT project:        ${projectdir}"
endif
	@echo "Environment setup:"
	@echo "  export ADA_PROJECT_PATH=${projectdir}:$$ADA_PROJECT_PATH"
